# ^s, not ^d
unbind C-b
set -g prefix C-s

# Shorten input delay (tmux normally adds a short delay on inputs)
set -sg escape-time 0

# send commands to nested session with ^s s
bind-key s send-prefix

# reload this on 'r'
bind r source-file ~/.tmux.conf

# terminal
set -g default-terminal screen-256color
set -g history-limit 50000

# vim resizes
bind - resize-pane -D 1
bind + resize-pane -U 1
bind < resize-pane -L 1
bind > resize-pane -R 1

# vim style split + perserve pwd
bind-key s split-window -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'

# split or new window path perserve
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# and faster resizes
bind J resize-pane -D 15
bind K resize-pane -U 15
bind H resize-pane -L 15
bind L resize-pane -R 15

# vim copying
setw -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Similar to 'C-w j' to navigate windows in Vim
unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key h
bind-key h select-pane -L
unbind-key l
bind-key l select-pane -R

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# If we want Vim to be told about focus: http://git.io/2UqSgQ
set -g focus-events on

# try to set wm window titles with xterm codes
set -g set-titles on

# colour support
set -g default-terminal "xterm"

# smart pane switching with awareness of vim splits
# see https://github.com/christoomey/vim-tmux-navigator
bind -n C-h    if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-h"  "select-pane -L"
bind -n C-j    if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-j"  "select-pane -D"
bind -n C-k    if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-k"  "select-pane -U"
bind -n C-l    if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-l"  "select-pane -R"
bind -n "C-\\" if "[ $(tmux display -p '#{pane_current_command}') = vim ]" "send-keys C-\\" "select-pane -l"

bind -n C-h    if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-h"  "select-pane -L"
bind -n C-j    if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-j"  "select-pane -D"
bind -n C-k    if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-k"  "select-pane -U"
bind -n C-l    if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-l"  "select-pane -R"
bind -n "C-\\" if "[ $(tmux display -p '#{pane_current_command}') = nvim ]" "send-keys C-\\" "select-pane -l"

bind e setw synchronize-panes on
bind E setw synchronize-panes off

# bells and monitoring
set -g visual-silence on
set -g visual-bell on
set -g bell-action any
set -gw mode-keys vi
set -g status-keys vi

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '              \
  tmux-plugins/tpm                 \
  tmux-plugins/tmux-sensible       \
  jbnicolai/tmux-urlview           \
  tmux-plugins/tmux-fpp            \
  tmux-plugins/tmux-copycat        \
  tmux-plugins/tmux-yank           \
  tmux-plugins/tmux-open           \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
